{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Covid\",\"_React$Component\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"covidData\",\"inherits\",\"createClass\",\"key\",\"value\",\"tableData\",\"forEach\",\"data\",\"push\",\"react_default\",\"a\",\"createElement\",\"country\",\"cases\",\"deaths\",\"recovered\",\"Container\",\"fluid\",\"Row\",\"Col\",\"className\",\"Table\",\"striped\",\"bordered\",\"hover\",\"getTableBody\",\"getHeader\",\"_this2\",\"document\",\"title\",\"fetch\",\"then\",\"results\",\"json\",\"setState\",\"console\",\"log\",\"React\",\"Component\",\"ReactDOM\",\"render\",\"src_Covid\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"6ZAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sGCFC,IAAMC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CACdC,UAAW,IAHOR,EADrB,OAAAC,OAAAQ,EAAA,EAAAR,CAAAJ,EAAAC,GAAAG,OAAAS,EAAA,EAAAT,CAAAJ,EAAA,CAAA,CAAAc,IAAA,eAAAC,MAAA,WASE,IAAIC,EAAY,GAYhB,OAXAC,GAAAA,CAAQX,KAAKI,MAAMC,UAAW,SAACO,EAAMJ,GACpCE,EAAUG,KACTC,EAAAC,EAAAC,cAAA,KAAA,KACCF,EAAAC,EAAAC,cAAA,KAAA,KAAKR,EAAI,GACTM,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,EAAKK,SACVH,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,EAAKM,OACVJ,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,EAAKO,QACVL,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,EAAKQ,eAINV,IArBT,CAAAF,IAAA,YAAAC,MAAA,WAyBE,OACCK,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAM,MAChBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACCT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KAAA,yBAGFV,EAAAC,EAAAC,cAAA,MAAA,CAAKS,UAAY,gBACjBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC5Bf,EAAAC,EAAAC,cAAA,QAAA,KACAF,EAAAC,EAAAC,cAAA,KAAA,KACCF,EAAAC,EAAAC,cAAA,KAAA,KAAA,KACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,WACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,eACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,YACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,YAGDF,EAAAC,EAAAC,cAAA,QAAA,KACEhB,KAAK8B,qBA5CZ,CAAAtB,IAAA,SAAAC,MAAA,WA8DG,OACAK,EAAAC,EAAAC,cAAA,MAAA,CAAKS,UAAU,eACbzB,KAAK+B,eAhEV,CAAAvB,IAAA,oBAAAC,MAAA,WAqEoB,IAAAuB,EAAAhC,KAClBiC,SAASC,MAAQ,eAUjBC,MAAM,sDACLC,KAAK,SAAAC,GACJ,OAAOA,EAAQC,SACdF,KAAK,SAAAxB,GACPoB,EAAKO,SAAS,CACblC,UAAWO,IAEZ4B,QAAQC,IAAI7B,SAvFflB,EAAA,CAA2BgD,EAAAA,EAAMC,WA4FjCC,EAAAA,EAASC,OACP/B,EAAAC,EAAAC,cAAC8B,EAAD,MACAb,SAASc,eAAe,SDmBpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMd,KAAK,SAAAe,GACjCA,EAAaC\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport Button from 'react-bootstrap/Button';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport  get  from 'lodash/get';\\nimport  size  from 'lodash/size';\\nimport forEach from 'lodash/forEach';\\nimport  isEmpty  from 'lodash/isEmpty';\\nimport Container from 'react-bootstrap/Container';\\nimport Row from 'react-bootstrap/Row';\\nimport Col from 'react-bootstrap/Col';\\nimport Table from 'react-bootstrap/Table';\\nimport * as serviceWorker from './serviceWorker';\\nimport { KeyObject } from 'crypto';\\n\\nexport class Covid extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n\\t\\t\\tcovidData: {}\\n    };\\n\\t}\\n\\n\\tgetTableBody() {\\n\\t\\tlet tableData = [];\\n\\t\\tforEach(this.state.covidData, (data, key) => {\\n\\t\\t\\ttableData.push(\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>{key+1}</td>\\n\\t\\t\\t\\t\\t<td>{data.country}</td>\\n\\t\\t\\t\\t\\t<td>{data.cases}</td>\\n\\t\\t\\t\\t\\t<td>{data.deaths}</td>\\n\\t\\t\\t\\t\\t<td>{data.recovered}</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t);\\n\\t});\\n\\t\\treturn tableData;\\n\\t}\\n\\t\\n\\tgetHeader() {\\n\\t\\treturn(\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<Container fluid=\\\"md\\\">\\n\\t\\t\\t\\t\\t<Row>\\n\\t\\t\\t\\t\\t\\t<Col>CoronaVirus Tracker</Col>\\n\\t\\t\\t\\t\\t</Row>\\n\\t\\t\\t\\t</Container>\\n\\t\\t\\t\\t<div className = \\\"covid__table\\\">\\n\\t\\t\\t\\t<Table striped bordered hover >\\n\\t\\t\\t\\t <thead>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>#</th>\\n\\t\\t\\t\\t\\t\\t<th>Country</th>\\n\\t\\t\\t\\t\\t\\t<th>Total Cases</th>\\n\\t\\t\\t\\t\\t\\t<th>Recoverd</th>\\n\\t\\t\\t\\t\\t\\t<th>Deaths</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t </thead>\\n\\t\\t\\t\\t <tbody>\\n\\t\\t\\t\\t\\t {this.getTableBody()}\\n\\t\\t\\t\\t </tbody>\\n\\t\\t\\t\\t</Table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n  \\n  render(){\\n\\t\\t\\n\\t\\t/*let options = [];\\n\\t\\tif (!isEmpty(covid)) {\\n\\t\\t\\tforEach(covid, (data, value) => {\\n\\t\\t\\t\\t\\tconsole.log(data, value);\\n\\t\\t\\t\\t\\tconsole.log(\\\"jell\\\");\\n\\t\\t\\t});\\n\\t\\t}*/\\n\\t\\t\\n\\t  return (\\n\\t\\t\\t<div className=\\\"covid__body\\\">\\n\\t\\t\\t\\t{this.getHeader()}\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n    );\\n\\t}\\n\\tcomponentDidMount(){\\n\\t\\tdocument.title = \\\"Covid Update\\\";\\n\\t\\t/*fetch('https://pomber.github.io/covid19/timeseries.json')\\n\\t\\t.then(results => {\\n\\t\\t\\t\\treturn results.json();\\n\\t\\t}).then(data => {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tcovidData: data\\n\\t\\t\\t});\\n\\t\\t});*/\\n\\n\\t\\tfetch('https://coronavirus-19-api.herokuapp.com/countries')\\n\\t\\t.then(results => {\\n\\t\\t\\t\\treturn results.json();\\n\\t\\t}).then(data => {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tcovidData: data\\n\\t\\t\\t});\\n\\t\\t\\tconsole.log(data);\\n\\t\\t});\\n  }\\n}\\n\\nReactDOM.render(\\n  <Covid />,\\n  document.getElementById('root')\\n);\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{114:function(e,t,n){e.exports=n(277)},119:function(e,t,n){},194:function(e,t){},196:function(e,t){},230:function(e,t){},231:function(e,t){},277:function(e,t,n){\"use strict\";n.r(t);var a=n(102),l=n(103),o=n(112),r=n(104),c=n(113),u=n(0),i=n.n(u),d=n(105),s=n.n(d),m=(n(119),n(121),n(123),n(160),n(106)),h=n.n(m),v=(n(190),n(107)),E=n(109),f=n(110),p=n(111);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(191);n.d(t,\"Covid\",function(){return b});var b=function(e){function t(e){var n;return Object(a.a)(this,t),(n=Object(o.a)(this,Object(r.a)(t).call(this,e))).state={covidData:{}},n}return Object(c.a)(t,e),Object(l.a)(t,[{key:\"getTableBody\",value:function(){var e=[];return h()(this.state.covidData,function(t,n){e.push(i.a.createElement(\"tr\",null,i.a.createElement(\"td\",null,n+1),i.a.createElement(\"td\",null,t.country),i.a.createElement(\"td\",null,t.cases),i.a.createElement(\"td\",null,t.deaths),i.a.createElement(\"td\",null,t.recovered)))}),e}},{key:\"getHeader\",value:function(){return i.a.createElement(\"div\",null,i.a.createElement(v.a,{fluid:\"md\"},i.a.createElement(E.a,null,i.a.createElement(f.a,null,\"CoronaVirus Tracker\"))),i.a.createElement(\"div\",{className:\"covid__table\"},i.a.createElement(p.a,{striped:!0,bordered:!0,hover:!0},i.a.createElement(\"thead\",null,i.a.createElement(\"tr\",null,i.a.createElement(\"th\",null,\"#\"),i.a.createElement(\"th\",null,\"Country\"),i.a.createElement(\"th\",null,\"Total Cases\"),i.a.createElement(\"th\",null,\"Recoverd\"),i.a.createElement(\"th\",null,\"Deaths\"))),i.a.createElement(\"tbody\",null,this.getTableBody()))))}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"covid__body\"},this.getHeader())}},{key:\"componentDidMount\",value:function(){var e=this;document.title=\"Covid Update\",fetch(\"https://coronavirus-19-api.herokuapp.com/countries\").then(function(e){return e.json()}).then(function(t){e.setState({covidData:t}),console.log(t)})}}]),t}(i.a.Component);s.a.render(i.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[114,2,1]]]);","extractedComments":[]}