{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\SG0304986\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Covid\",\"_React$Component\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"covidData\",\"inherits\",\"createClass\",\"key\",\"value\",\"tableData\",\"forEach\",\"data\",\"casesToday\",\"concat\",\"cases\",\"todayCases\",\"deathsToday\",\"deaths\",\"todayDeaths\",\"push\",\"react_default\",\"a\",\"createElement\",\"Alert\",\"variant\",\"Heading\",\"country\",\"recovered\",\"isEmpty\",\"Spinner\",\"as\",\"animation\",\"size\",\"role\",\"aria-hidden\",\"Table\",\"hover\",\"responsive\",\"Badge\",\"className\",\"getTableBody\",\"Accordion\",\"Card\",\"Toggle\",\"Header\",\"eventKey\",\"Collapse\",\"Body\",\"getTable\",\"getSpinner\",\"getHeader\",\"_this2\",\"document\",\"title\",\"fetch\",\"then\",\"results\",\"json\",\"setState\",\"console\",\"log\",\"React\",\"Component\",\"ReactDOM\",\"render\",\"src_Covid\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport Button from 'react-bootstrap/Button';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport  get  from 'lodash/get';\\nimport  size  from 'lodash/size';\\nimport forEach from 'lodash/forEach';\\nimport  isEmpty  from 'lodash/isEmpty';\\nimport Container from 'react-bootstrap/Container';\\nimport Accordion from 'react-bootstrap/Accordion';\\nimport Spinner from 'react-bootstrap/Spinner';\\nimport Card from 'react-bootstrap/Card';\\nimport Row from 'react-bootstrap/Row';\\nimport Col from 'react-bootstrap/Col';\\nimport Table from 'react-bootstrap/Table';\\nimport Badge from 'react-bootstrap/Badge';\\nimport Alert from 'react-bootstrap/Alert';\\nimport * as serviceWorker from './serviceWorker';\\nimport { KeyObject } from 'crypto';\\n\\nexport class Covid extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n\\t\\t\\tcovidData: {}\\n    };\\n\\t}\\n\\n\\tgetTableBody() {\\n\\t\\tlet tableData = [];\\n\\t\\tforEach(this.state.covidData, (data, key) => {\\n\\t\\t\\tconst casesToday = `${data.cases} | ${data.todayCases}`;\\n\\t\\t\\tconst deathsToday = `${data.deaths} | ${data.todayDeaths}`;\\n\\t\\t\\ttableData.push(\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"primary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{data.country} \\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n  \\n\\t\\t\\t\\t\\t\\t</Alert>\\n\\t\\t\\t\\t\\t</td>\\n\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"primary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{casesToday}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t</Alert>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"success\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{data.recovered}\\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t</Alert>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<Alert variant=\\\"danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{deathsToday} \\n\\t\\t\\t\\t\\t\\t\\t\\t</Alert.Heading>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t</Alert>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t);\\n\\t});\\n\\t\\treturn tableData;\\n\\t}\\n\\n\\tgetSpinner() {\\n\\t\\tif (isEmpty(this.state.covidData)) {\\n\\t\\t\\treturn (\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<Spinner\\n\\t\\t\\t\\t\\t\\tas=\\\"span\\\"\\n\\t\\t\\t\\t\\t\\tanimation=\\\"grow\\\"\\n\\t\\t\\t\\t\\t\\tsize=\\\"md\\\"\\n\\t\\t\\t\\t\\t\\trole=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\taria-hidden=\\\"true\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\tLoading...\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n\\n\\tgetTable() {\\n\\t\\treturn (\\n\\t\\t\\t<Table \\n\\t\\t\\thover \\n\\t\\t\\tvariant=\\\"dark\\\"\\n\\t\\t\\tresponsive\\n\\t\\t\\tsize=\\\"sm\\\">\\n\\t\\t\\t <thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>\\n\\t\\t\\t\\t\\t<Badge variant=\\\"light\\\"\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\n\\t\\t\\t\\t\\t>Country</Badge>\\n\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\n\\t\\t\\t\\t\\t>Cases (Total | Today)</Badge></th>\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\n\\t\\t\\t\\t\\t>Recovered</Badge></th>\\n\\t\\t\\t\\t\\t<th><Badge variant=\\\"light\\\"\\n\\t\\t\\t\\t\\t\\tclassName=\\\"covid__table-header\\\"\\n\\t\\t\\t\\t\\t>Deaths (Total | Today)</Badge></th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t </thead>\\n\\t\\t\\t <tbody>\\n\\t\\t\\t\\t {this.getTableBody()}\\n\\t\\t\\t </tbody>\\n\\t\\t\\t</Table>\\n\\t\\t);\\n\\t}\\n\\t\\n\\tgetHeader() {\\n\\t\\treturn(\\n\\t\\t\\t<div className=\\\"covid__full-data-body\\\">\\n\\t\\t\\t\\t<Accordion>\\n  <Card>\\n    <Accordion.Toggle as={Card.Header} eventKey=\\\"0\\\">\\n      Global Coronavirus Information\\n    </Accordion.Toggle>\\n    <Accordion.Collapse eventKey=\\\"0\\\">\\n\\t\\t\\t<Card.Body>\\n\\t\\t\\t\\tThe data is updated every 24 hours and has been taken from official WHO statistics\\n\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\tStay Home. Stay Safe\\n\\t\\t\\t</Card.Body>\\n    </Accordion.Collapse>\\n  </Card>\\n</Accordion>\\n<div className = \\\"covid__table\\\">\\n\\t\\t\\t{this.getTable()}\\n\\t\\t\\t{this.getSpinner()}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n  \\n  render(){\\n\\t\\t\\n\\t\\t/*let options = [];\\n\\t\\tif (!isEmpty(covid)) {\\n\\t\\t\\tforEach(covid, (data, value) => {\\n\\t\\t\\t\\t\\tconsole.log(data, value);\\n\\t\\t\\t\\t\\tconsole.log(\\\"jell\\\");\\n\\t\\t\\t});\\n\\t\\t}*/\\n\\t\\t\\n\\t  return (\\n\\t\\t\\t<div className=\\\"covid__body\\\">\\n\\t\\t\\t\\t{this.getHeader()}\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n    );\\n\\t}\\n\\tcomponentDidMount(){\\n\\t\\tdocument.title = \\\"Covid Update\\\";\\n\\t\\t/*fetch('https://pomber.github.io/covid19/timeseries.json')\\n\\t\\t.then(results => {\\n\\t\\t\\t\\treturn results.json();\\n\\t\\t}).then(data => {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tcovidData: data\\n\\t\\t\\t});\\n\\t\\t});*/\\n\\n\\t\\tfetch('https://coronavirus-19-api.herokuapp.com/countries')\\n\\t\\t.then(results => {\\n\\t\\t\\t\\treturn results.json();\\n\\t\\t}).then(data => {\\n\\t\\t\\tthis.setState({\\n\\t\\t\\t\\tcovidData: data\\n\\t\\t\\t});\\n\\t\\t\\tconsole.log(data);\\n\\t\\t});\\n  }\\n}\\n\\nReactDOM.render(\\n  <Covid />,\\n  document.getElementById('root')\\n);\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{127:function(e,a,t){e.exports=t(294)},132:function(e,a,t){},206:function(e,a){},208:function(e,a){},242:function(e,a){},243:function(e,a){},294:function(e,a,t){\"use strict\";t.r(a);var n=t(117),l=t(118),r=t(125),c=t(119),o=t(126),i=t(0),u=t.n(i),s=t(45),d=t.n(s),m=(t(132),t(134),t(136),t(173),t(120)),v=t.n(m),h=t(121),E=t.n(h),f=t(49),y=t(123),g=t(50),p=t(124),b=t(35),_=t(15);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(203);t.d(a,\"Covid\",function(){return k});var k=function(e){function a(e){var t;return Object(n.a)(this,a),(t=Object(r.a)(this,Object(c.a)(a).call(this,e))).state={covidData:{}},t}return Object(o.a)(a,e),Object(l.a)(a,[{key:\"getTableBody\",value:function(){var e=[];return v()(this.state.covidData,function(a,t){var n=\"\".concat(a.cases,\" | \").concat(a.todayCases),l=\"\".concat(a.deaths,\" | \").concat(a.todayDeaths);e.push(u.a.createElement(\"tr\",null,u.a.createElement(\"td\",null,u.a.createElement(_.a,{variant:\"primary\"},u.a.createElement(_.a.Heading,null,a.country),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(_.a,{variant:\"primary\"},u.a.createElement(_.a.Heading,null,n),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(_.a,{variant:\"success\"},u.a.createElement(_.a.Heading,null,a.recovered),u.a.createElement(\"hr\",null))),u.a.createElement(\"td\",null,u.a.createElement(_.a,{variant:\"danger\"},u.a.createElement(_.a.Heading,null,l),u.a.createElement(\"hr\",null)))))}),e}},{key:\"getSpinner\",value:function(){if(E()(this.state.covidData))return u.a.createElement(\"div\",null,u.a.createElement(y.a,{as:\"span\",animation:\"grow\",size:\"md\",role:\"status\",\"aria-hidden\":\"true\"}),\"Loading...\")}},{key:\"getTable\",value:function(){return u.a.createElement(p.a,{hover:!0,variant:\"dark\",responsive:!0,size:\"sm\"},u.a.createElement(\"thead\",null,u.a.createElement(\"tr\",null,u.a.createElement(\"th\",null,u.a.createElement(b.a,{variant:\"light\",className:\"covid__table-header\"},\"Country\")),u.a.createElement(\"th\",null,u.a.createElement(b.a,{variant:\"light\",className:\"covid__table-header\"},\"Cases (Total | Today)\")),u.a.createElement(\"th\",null,u.a.createElement(b.a,{variant:\"light\",className:\"covid__table-header\"},\"Recovered\")),u.a.createElement(\"th\",null,u.a.createElement(b.a,{variant:\"light\",className:\"covid__table-header\"},\"Deaths (Total | Today)\")))),u.a.createElement(\"tbody\",null,this.getTableBody()))}},{key:\"getHeader\",value:function(){return u.a.createElement(\"div\",{className:\"covid__full-data-body\"},u.a.createElement(f.a,null,u.a.createElement(g.a,null,u.a.createElement(f.a.Toggle,{as:g.a.Header,eventKey:\"0\"},\"Global Coronavirus Information\"),u.a.createElement(f.a.Collapse,{eventKey:\"0\"},u.a.createElement(g.a.Body,null,\"The data is updated every 24 hours and has been taken from official WHO statistics\",u.a.createElement(\"hr\",null),\"Stay Home. Stay Safe\")))),u.a.createElement(\"div\",{className:\"covid__table\"},this.getTable(),this.getSpinner()))}},{key:\"render\",value:function(){return u.a.createElement(\"div\",{className:\"covid__body\"},this.getHeader())}},{key:\"componentDidMount\",value:function(){var e=this;document.title=\"Covid Update\",fetch(\"https://coronavirus-19-api.herokuapp.com/countries\").then(function(e){return e.json()}).then(function(a){e.setState({covidData:a}),console.log(a)})}}]),a}(u.a.Component);d.a.render(u.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[127,2,1]]]);","extractedComments":[]}